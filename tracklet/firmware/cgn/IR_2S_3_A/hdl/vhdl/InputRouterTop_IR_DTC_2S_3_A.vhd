-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity InputRouterTop_IR_DTC_2S_3_A is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    hInputStubs_V_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    hInputStubs_V_empty_n : IN STD_LOGIC;
    hInputStubs_V_read : OUT STD_LOGIC;
    bx_V : IN STD_LOGIC_VECTOR (2 downto 0);
    hLinkWord_V : IN STD_LOGIC_VECTOR (19 downto 0);
    hPhBnWord_V : IN STD_LOGIC_VECTOR (31 downto 0);
    bx_o_V : OUT STD_LOGIC_VECTOR (2 downto 0);
    bx_o_V_ap_vld : OUT STD_LOGIC;
    hOutputStubs_0_dataarray_data_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    hOutputStubs_0_dataarray_data_V_ce0 : OUT STD_LOGIC;
    hOutputStubs_0_dataarray_data_V_we0 : OUT STD_LOGIC;
    hOutputStubs_0_dataarray_data_V_d0 : OUT STD_LOGIC_VECTOR (35 downto 0) );
end;


architecture behav of InputRouterTop_IR_DTC_2S_3_A is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "InputRouterTop_IR_DTC_2S_3_A,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu7p-flvb2104-1-e,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.428313,HLS_SYN_LAT=111,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=869,HLS_SYN_LUT=2060,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_6B : STD_LOGIC_VECTOR (6 downto 0) := "1101011";
    constant ap_const_lv39_0 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv20_FFFFF : STD_LOGIC_VECTOR (19 downto 0) := "11111111111111111111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv20_6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000110";
    constant ap_const_lv20_5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000101";
    constant ap_const_lv20_4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_const_lv20_3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000011";
    constant ap_const_lv20_2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_const_lv20_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv33_1FFFFFFFF : STD_LOGIC_VECTOR (32 downto 0) := "111111111111111111111111111111111";
    constant ap_const_lv14_3FFF : STD_LOGIC_VECTOR (13 downto 0) := "11111111111111";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv6_33 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_const_lv6_D : STD_LOGIC_VECTOR (5 downto 0) := "001101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln322_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal bx_o_V_1_ack_in : STD_LOGIC;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal bx_o_V_1_data_reg : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal bx_o_V_1_vld_reg : STD_LOGIC := '0';
    signal bx_o_V_1_vld_in : STD_LOGIC;
    signal kPhiCorrtable_L1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kPhiCorrtable_L1_ce0 : STD_LOGIC;
    signal kPhiCorrtable_L1_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal kPhiCorrtable_L1_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal kPhiCorrtable_L1_ce1 : STD_LOGIC;
    signal kPhiCorrtable_L1_q1 : STD_LOGIC_VECTOR (14 downto 0);
    signal kPhiCorrtable_L2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kPhiCorrtable_L2_ce0 : STD_LOGIC;
    signal kPhiCorrtable_L2_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal kPhiCorrtable_L2_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal kPhiCorrtable_L2_ce1 : STD_LOGIC;
    signal kPhiCorrtable_L2_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal kPhiCorrtable_L3_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kPhiCorrtable_L3_ce0 : STD_LOGIC;
    signal kPhiCorrtable_L3_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal kPhiCorrtable_L3_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal kPhiCorrtable_L3_ce1 : STD_LOGIC;
    signal kPhiCorrtable_L3_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal kPhiCorrtable_L4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal kPhiCorrtable_L4_ce0 : STD_LOGIC;
    signal kPhiCorrtable_L4_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal kPhiCorrtable_L4_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal kPhiCorrtable_L4_ce1 : STD_LOGIC;
    signal kPhiCorrtable_L4_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal kPhiCorrtable_L5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal kPhiCorrtable_L5_ce0 : STD_LOGIC;
    signal kPhiCorrtable_L5_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal kPhiCorrtable_L5_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal kPhiCorrtable_L5_ce1 : STD_LOGIC;
    signal kPhiCorrtable_L5_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal kPhiCorrtable_L6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal kPhiCorrtable_L6_ce0 : STD_LOGIC;
    signal kPhiCorrtable_L6_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal kPhiCorrtable_L6_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal kPhiCorrtable_L6_ce1 : STD_LOGIC;
    signal kPhiCorrtable_L6_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal hInputStubs_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal do_init_reg_434 : STD_LOGIC_VECTOR (0 downto 0);
    signal cStubCounter_0_i2_reg_450 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_rewind_reg_464 : STD_LOGIC_VECTOR (0 downto 0);
    signal bx_V3_rewind_reg_478 : STD_LOGIC_VECTOR (2 downto 0);
    signal hLinkWord_V4_rewind_reg_492 : STD_LOGIC_VECTOR (19 downto 0);
    signal hPhBnWord_V5_rewind_reg_506 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_phi_reg_520 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_phi_reg_520_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bx_V3_phi_reg_532 : STD_LOGIC_VECTOR (2 downto 0);
    signal bx_V3_phi_reg_532_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal bx_V3_phi_reg_532_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal hLinkWord_V4_phi_reg_545 : STD_LOGIC_VECTOR (19 downto 0);
    signal hLinkWord_V4_phi_reg_545_pp0_iter2_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal hPhBnWord_V5_phi_reg_557 : STD_LOGIC_VECTOR (31 downto 0);
    signal hPhBnWord_V5_phi_reg_557_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal hPhBnWord_V5_phi_reg_557_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal hEntries_V1_reg_569 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_do_init_phi_fu_438_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal hStub_V_reg_1537 : STD_LOGIC_VECTOR (38 downto 0);
    signal hStub_V_reg_1537_pp0_iter1_reg : STD_LOGIC_VECTOR (38 downto 0);
    signal hStub_V_reg_1537_pp0_iter2_reg : STD_LOGIC_VECTOR (38 downto 0);
    signal cStubCounter_fu_609_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal cStubCounter_reg_1552 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln322_reg_1557 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln322_reg_1557_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln322_reg_1557_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln322_reg_1557_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1561 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1561_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1561_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln647_fu_626_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln647_reg_1565 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln647_reg_1565_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln647_reg_1565_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_629_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_reg_1569 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_reg_1569_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_reg_1569_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal Hi_fu_638_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal Hi_reg_1574 : STD_LOGIC_VECTOR (3 downto 0);
    signal Hi_reg_1574_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_s_fu_750_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Result_s_reg_1579 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln171_fu_999_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln171_reg_1649 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_9_reg_1654 : STD_LOGIC_VECTOR (0 downto 0);
    signal cBn_l_index_fu_1043_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal cBn_l_index_reg_1659 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln171_1_fu_1137_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln171_1_reg_1665 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_12_reg_1670 : STD_LOGIC_VECTOR (1 downto 0);
    signal cBn_l_index_1_fu_1175_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal cBn_l_index_1_reg_1675 : STD_LOGIC_VECTOR (3 downto 0);
    signal hAStub_data_V_reg_1681 : STD_LOGIC_VECTOR (35 downto 0);
    signal cIndxThisBn_2_fu_1459_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal cIndxThisBn_2_reg_1686 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_phi_mux_cStubCounter_0_i2_phi_fu_454_p6 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_p_rewind_phi_fu_468_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_bx_V3_rewind_phi_fu_482_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_hLinkWord_V4_rewind_phi_fu_496_p6 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_mux_hPhBnWord_V5_rewind_phi_fu_510_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_p_phi_reg_520 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_p_phi_reg_520 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_bx_V3_phi_reg_532 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_reg_pp0_iter1_bx_V3_phi_reg_532 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_hLinkWord_V4_phi_phi_fu_549_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_hLinkWord_V4_phi_reg_545 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter1_hLinkWord_V4_phi_reg_545 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_phi_reg_pp0_iter0_hPhBnWord_V5_phi_reg_557 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_hPhBnWord_V5_phi_reg_557 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_hEntries_V_phi_fu_587_p8 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_reg_pp0_iter4_hEntries_V_reg_583 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_14_fu_1483_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal hNStubs_0_V_fu_1491_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln544_fu_805_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_1_fu_815_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_fu_1510_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal Lo_1_fu_652_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal Hi_1_fu_646_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln681_fu_664_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln681_1_fu_668_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln681_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln681_fu_682_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln681_2_fu_694_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_672_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln681_1_fu_688_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln681_fu_700_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln681_2_fu_716_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln681_3_fu_724_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln681_1_fu_708_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln681_2_fu_730_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln681_3_fu_734_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal lshr_ln681_fu_738_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal lshr_ln681_1_fu_744_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln1_fu_765_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal hBend_V_fu_756_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal rbin_V_fu_774_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal hBend_V_1_fu_788_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_780_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_6_fu_797_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln141_5_fu_884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln148_fu_843_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln141_fu_889_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln141_4_fu_879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln141_3_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln152_fu_847_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln141_2_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln141_1_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln141_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln141_fu_901_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln141_fu_897_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln141_1_fu_907_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln141_1_fu_915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln141_2_fu_929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln141_2_fu_921_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln141_3_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln141_3_fu_935_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln141_4_fu_949_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal hPhi_V_fu_825_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal corrval_12_fu_957_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln215_fu_965_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln215_fu_969_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal ret_V_fu_973_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_7_fu_983_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1354_fu_979_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln171_fu_991_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln176_fu_1011_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln176_1_fu_1019_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln176_fu_1027_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln176_fu_1031_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln176_2_fu_1035_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln148_1_fu_851_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln141_6_fu_1051_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln152_1_fu_855_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln141_1_fu_1059_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln141_7_fu_1063_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln141_8_fu_1071_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln141_9_fu_1079_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln141_10_fu_1087_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal hPhi_V_1_fu_834_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal corrval_13_fu_1095_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln215_1_fu_1103_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln215_1_fu_1107_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_1_fu_1111_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_11_fu_1121_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1354_1_fu_1117_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln171_1_fu_1129_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln176_4_fu_1151_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln176_5_fu_1159_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln176_6_fu_1167_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln555_fu_1192_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_4_fu_1203_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_5_fu_1212_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln647_fu_1221_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_5_fu_1233_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln173_fu_1239_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln681_4_fu_1248_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln681_1_fu_1243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln681_fu_1261_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln681_5_fu_1273_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_10_fu_1251_p4 : STD_LOGIC_VECTOR (32 downto 0);
    signal sub_ln681_4_fu_1267_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln681_3_fu_1279_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln681_5_fu_1295_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln681_6_fu_1303_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln681_4_fu_1287_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln681_5_fu_1309_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln681_6_fu_1313_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lshr_ln681_2_fu_1317_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal lshr_ln681_3_fu_1323_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln891_fu_1335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_6_fu_1340_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln173_1_fu_1347_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln681_7_fu_1356_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln681_2_fu_1351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln681_1_fu_1369_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln681_8_fu_1381_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_13_fu_1359_p4 : STD_LOGIC_VECTOR (32 downto 0);
    signal sub_ln681_7_fu_1375_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln681_6_fu_1387_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln681_8_fu_1403_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln681_9_fu_1411_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln681_7_fu_1395_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln681_8_fu_1417_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln681_9_fu_1421_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lshr_ln681_4_fu_1425_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal lshr_ln681_5_fu_1431_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Result_1_fu_1329_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Result_2_fu_1437_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln647_1_fu_1443_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln647_2_fu_1447_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1195_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cIndxThisBn_1_fu_1451_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal cIndxThisBn_fu_1229_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln_fu_1467_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln555_1_fu_1474_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_2_fu_1478_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln321_fu_1498_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_1502_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_0to3 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_311 : BOOLEAN;
    signal ap_condition_55 : BOOLEAN;
    signal ap_condition_308 : BOOLEAN;

    component InputRouterTop_IR_DTC_2S_3_A_kPhiCorrtable_L1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component InputRouterTop_IR_DTC_2S_3_A_kPhiCorrtable_L2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component InputRouterTop_IR_DTC_2S_3_A_kPhiCorrtable_L3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component InputRouterTop_IR_DTC_2S_3_A_kPhiCorrtable_L4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component InputRouterTop_IR_DTC_2S_3_A_kPhiCorrtable_L5 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component InputRouterTop_IR_DTC_2S_3_A_kPhiCorrtable_L6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    kPhiCorrtable_L1_U : component InputRouterTop_IR_DTC_2S_3_A_kPhiCorrtable_L1
    generic map (
        DataWidth => 15,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kPhiCorrtable_L1_address0,
        ce0 => kPhiCorrtable_L1_ce0,
        q0 => kPhiCorrtable_L1_q0,
        address1 => kPhiCorrtable_L1_address1,
        ce1 => kPhiCorrtable_L1_ce1,
        q1 => kPhiCorrtable_L1_q1);

    kPhiCorrtable_L2_U : component InputRouterTop_IR_DTC_2S_3_A_kPhiCorrtable_L2
    generic map (
        DataWidth => 14,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kPhiCorrtable_L2_address0,
        ce0 => kPhiCorrtable_L2_ce0,
        q0 => kPhiCorrtable_L2_q0,
        address1 => kPhiCorrtable_L2_address1,
        ce1 => kPhiCorrtable_L2_ce1,
        q1 => kPhiCorrtable_L2_q1);

    kPhiCorrtable_L3_U : component InputRouterTop_IR_DTC_2S_3_A_kPhiCorrtable_L3
    generic map (
        DataWidth => 14,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kPhiCorrtable_L3_address0,
        ce0 => kPhiCorrtable_L3_ce0,
        q0 => kPhiCorrtable_L3_q0,
        address1 => kPhiCorrtable_L3_address1,
        ce1 => kPhiCorrtable_L3_ce1,
        q1 => kPhiCorrtable_L3_q1);

    kPhiCorrtable_L4_U : component InputRouterTop_IR_DTC_2S_3_A_kPhiCorrtable_L4
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kPhiCorrtable_L4_address0,
        ce0 => kPhiCorrtable_L4_ce0,
        q0 => kPhiCorrtable_L4_q0,
        address1 => kPhiCorrtable_L4_address1,
        ce1 => kPhiCorrtable_L4_ce1,
        q1 => kPhiCorrtable_L4_q1);

    kPhiCorrtable_L5_U : component InputRouterTop_IR_DTC_2S_3_A_kPhiCorrtable_L5
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kPhiCorrtable_L5_address0,
        ce0 => kPhiCorrtable_L5_ce0,
        q0 => kPhiCorrtable_L5_q0,
        address1 => kPhiCorrtable_L5_address1,
        ce1 => kPhiCorrtable_L5_ce1,
        q1 => kPhiCorrtable_L5_q1);

    kPhiCorrtable_L6_U : component InputRouterTop_IR_DTC_2S_3_A_kPhiCorrtable_L6
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kPhiCorrtable_L6_address0,
        ce0 => kPhiCorrtable_L6_ce0,
        q0 => kPhiCorrtable_L6_q0,
        address1 => kPhiCorrtable_L6_address1,
        ce1 => kPhiCorrtable_L6_ce1,
        q1 => kPhiCorrtable_L6_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_bx_V3_phi_reg_532_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_55)) then
                if ((ap_phi_mux_do_init_phi_fu_438_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_bx_V3_phi_reg_532 <= bx_V;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_bx_V3_phi_reg_532 <= ap_phi_reg_pp0_iter0_bx_V3_phi_reg_532;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_hLinkWord_V4_phi_reg_545_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_55)) then
                if ((ap_phi_mux_do_init_phi_fu_438_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_hLinkWord_V4_phi_reg_545 <= hLinkWord_V;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_hLinkWord_V4_phi_reg_545 <= ap_phi_reg_pp0_iter0_hLinkWord_V4_phi_reg_545;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_hPhBnWord_V5_phi_reg_557_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_55)) then
                if ((ap_phi_mux_do_init_phi_fu_438_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_hPhBnWord_V5_phi_reg_557 <= hPhBnWord_V;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_hPhBnWord_V5_phi_reg_557 <= ap_phi_reg_pp0_iter0_hPhBnWord_V5_phi_reg_557;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_phi_reg_520_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_55)) then
                if ((ap_phi_mux_do_init_phi_fu_438_p6 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_p_phi_reg_520 <= hLinkWord_V(16 downto 16);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_phi_reg_520 <= ap_phi_reg_pp0_iter0_p_phi_reg_520;
                end if;
            end if; 
        end if;
    end process;

    bx_V3_phi_reg_532_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_308)) then
                if ((do_init_reg_434 = ap_const_lv1_0)) then 
                    bx_V3_phi_reg_532 <= ap_phi_mux_bx_V3_rewind_phi_fu_482_p6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    bx_V3_phi_reg_532 <= ap_phi_reg_pp0_iter1_bx_V3_phi_reg_532;
                end if;
            end if; 
        end if;
    end process;

    bx_o_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (bx_o_V_1_vld_reg = ap_const_logic_0) and (bx_o_V_1_vld_in = ap_const_logic_1))) then 
                bx_o_V_1_vld_reg <= ap_const_logic_1;
            elsif (((bx_o_V_1_vld_in = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1) and (bx_o_V_1_vld_reg = ap_const_logic_1))) then 
                bx_o_V_1_vld_reg <= ap_const_logic_0;
            end if; 
        end if;
    end process;

    cStubCounter_0_i2_reg_450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln322_reg_1557 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                cStubCounter_0_i2_reg_450 <= cStubCounter_reg_1552;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln322_reg_1557 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                cStubCounter_0_i2_reg_450 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    do_init_reg_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln322_reg_1557 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                do_init_reg_434 <= ap_const_lv1_0;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln322_reg_1557 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                do_init_reg_434 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    hEntries_V1_reg_569_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln322_reg_1557_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
                hEntries_V1_reg_569 <= ap_phi_mux_hEntries_V_phi_fu_587_p8;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln322_reg_1557_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                hEntries_V1_reg_569 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    hLinkWord_V4_phi_reg_545_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_308)) then
                if ((do_init_reg_434 = ap_const_lv1_0)) then 
                    hLinkWord_V4_phi_reg_545 <= ap_phi_mux_hLinkWord_V4_rewind_phi_fu_496_p6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    hLinkWord_V4_phi_reg_545 <= ap_phi_reg_pp0_iter1_hLinkWord_V4_phi_reg_545;
                end if;
            end if; 
        end if;
    end process;

    hPhBnWord_V5_phi_reg_557_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_308)) then
                if ((do_init_reg_434 = ap_const_lv1_0)) then 
                    hPhBnWord_V5_phi_reg_557 <= ap_phi_mux_hPhBnWord_V5_rewind_phi_fu_510_p6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    hPhBnWord_V5_phi_reg_557 <= ap_phi_reg_pp0_iter1_hPhBnWord_V5_phi_reg_557;
                end if;
            end if; 
        end if;
    end process;

    p_phi_reg_520_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_308)) then
                if ((do_init_reg_434 = ap_const_lv1_0)) then 
                    p_phi_reg_520 <= ap_phi_mux_p_rewind_phi_fu_468_p6;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    p_phi_reg_520 <= ap_phi_reg_pp0_iter1_p_phi_reg_520;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln647_fu_626_p1 = ap_const_lv1_1) and (icmp_ln879_fu_621_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    Hi_reg_1574(3 downto 2) <= Hi_fu_638_p3(3 downto 2);
                    p_Result_s_reg_1579(18 downto 0) <= p_Result_s_fu_750_p2(18 downto 0);
                tmp_reg_1569 <= hStub_V_reg_1537(2 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                    Hi_reg_1574_pp0_iter2_reg(3 downto 2) <= Hi_reg_1574(3 downto 2);
                bx_V3_phi_reg_532_pp0_iter2_reg <= bx_V3_phi_reg_532;
                bx_V3_phi_reg_532_pp0_iter3_reg <= bx_V3_phi_reg_532_pp0_iter2_reg;
                hLinkWord_V4_phi_reg_545_pp0_iter2_reg <= hLinkWord_V4_phi_reg_545;
                hPhBnWord_V5_phi_reg_557_pp0_iter2_reg <= hPhBnWord_V5_phi_reg_557;
                hPhBnWord_V5_phi_reg_557_pp0_iter3_reg <= hPhBnWord_V5_phi_reg_557_pp0_iter2_reg;
                hStub_V_reg_1537_pp0_iter2_reg <= hStub_V_reg_1537_pp0_iter1_reg;
                icmp_ln322_reg_1557_pp0_iter2_reg <= icmp_ln322_reg_1557_pp0_iter1_reg;
                icmp_ln322_reg_1557_pp0_iter3_reg <= icmp_ln322_reg_1557_pp0_iter2_reg;
                icmp_ln879_reg_1561_pp0_iter2_reg <= icmp_ln879_reg_1561;
                icmp_ln879_reg_1561_pp0_iter3_reg <= icmp_ln879_reg_1561_pp0_iter2_reg;
                p_phi_reg_520_pp0_iter2_reg <= p_phi_reg_520;
                tmp_reg_1569_pp0_iter2_reg <= tmp_reg_1569;
                tmp_reg_1569_pp0_iter3_reg <= tmp_reg_1569_pp0_iter2_reg;
                trunc_ln647_reg_1565_pp0_iter2_reg <= trunc_ln647_reg_1565;
                trunc_ln647_reg_1565_pp0_iter3_reg <= trunc_ln647_reg_1565_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln322_reg_1557_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                bx_V3_rewind_reg_478 <= bx_V3_phi_reg_532;
                hLinkWord_V4_rewind_reg_492 <= hLinkWord_V4_phi_reg_545;
                hPhBnWord_V5_rewind_reg_506 <= hPhBnWord_V5_phi_reg_557;
                p_rewind_reg_464 <= p_phi_reg_520;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (bx_o_V_1_vld_reg = ap_const_logic_0) and (bx_o_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (ap_const_logic_1 = ap_const_logic_1) and (bx_o_V_1_vld_in = ap_const_logic_1) and (bx_o_V_1_vld_reg = ap_const_logic_1)))) then
                bx_o_V_1_data_reg <= bx_V3_phi_reg_532_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln647_reg_1565 = ap_const_lv1_1) and (icmp_ln879_reg_1561 = ap_const_lv1_0))) then
                    cBn_l_index_1_reg_1675(2 downto 0) <= cBn_l_index_1_fu_1175_p3(2 downto 0);
                cBn_l_index_reg_1659 <= cBn_l_index_fu_1043_p3;
                tmp_12_reg_1670 <= select_ln171_1_fu_1129_p3(15 downto 14);
                tmp_9_reg_1654 <= select_ln171_fu_991_p3(17 downto 17);
                trunc_ln171_1_reg_1665 <= trunc_ln171_1_fu_1137_p1;
                trunc_ln171_reg_1649 <= trunc_ln171_fu_999_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln647_reg_1565_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_reg_1561_pp0_iter2_reg = ap_const_lv1_0))) then
                cIndxThisBn_2_reg_1686 <= cIndxThisBn_2_fu_1459_p3;
                hAStub_data_V_reg_1681 <= hStub_V_reg_1537_pp0_iter2_reg(38 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                cStubCounter_reg_1552 <= cStubCounter_fu_609_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                hStub_V_reg_1537 <= hInputStubs_V_dout;
                hStub_V_reg_1537_pp0_iter1_reg <= hStub_V_reg_1537;
                icmp_ln322_reg_1557 <= icmp_ln322_fu_615_p2;
                icmp_ln322_reg_1557_pp0_iter1_reg <= icmp_ln322_reg_1557;
                icmp_ln879_reg_1561 <= icmp_ln879_fu_621_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_fu_621_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln647_reg_1565 <= trunc_ln647_fu_626_p1;
            end if;
        end if;
    end process;
    Hi_reg_1574(1 downto 0) <= "00";
    Hi_reg_1574_pp0_iter2_reg(1 downto 0) <= "00";
    p_Result_s_reg_1579(19) <= '0';
    cBn_l_index_1_reg_1675(3) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    Hi_1_fu_646_p2 <= (ap_const_lv4_3 or Hi_fu_638_p3);
    Hi_2_fu_1478_p2 <= std_logic_vector(unsigned(cIndxThisBn_2_reg_1686) + unsigned(zext_ln555_1_fu_1474_p1));
    Hi_fu_638_p3 <= (tmp_fu_629_p4 & ap_const_lv2_0);
    Lo_1_fu_652_p2 <= (ap_const_lv4_1 or Hi_fu_638_p3);
    add_ln681_1_fu_1369_p2 <= std_logic_vector(signed(ap_const_lv6_33) + signed(zext_ln681_7_fu_1356_p1));
    add_ln681_fu_1261_p2 <= std_logic_vector(signed(ap_const_lv6_30) + signed(zext_ln681_4_fu_1248_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, hInputStubs_V_empty_n, bx_o_V_1_ack_in, ap_enable_reg_pp0_iter4)
    begin
                ap_block_pp0_stage0_01001 <= (((bx_o_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((hInputStubs_V_empty_n = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, hInputStubs_V_empty_n, bx_o_V_1_ack_in, ap_enable_reg_pp0_iter4)
    begin
                ap_block_pp0_stage0_11001 <= (((bx_o_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((hInputStubs_V_empty_n = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, hInputStubs_V_empty_n, bx_o_V_1_ack_in, ap_enable_reg_pp0_iter4)
    begin
                ap_block_pp0_stage0_subdone <= (((bx_o_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((hInputStubs_V_empty_n = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(hInputStubs_V_empty_n)
    begin
                ap_block_state2_pp0_stage0_iter0 <= (hInputStubs_V_empty_n = ap_const_logic_0);
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter4_assign_proc : process(bx_o_V_1_ack_in)
    begin
                ap_block_state6_pp0_stage0_iter4 <= (bx_o_V_1_ack_in = ap_const_logic_0);
    end process;


    ap_condition_308_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_308 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_311_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_311 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_55_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_55 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, icmp_ln322_reg_1557_pp0_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln322_reg_1557_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_0to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_bx_V3_rewind_phi_fu_482_p6_assign_proc : process(ap_block_pp0_stage0, bx_V3_rewind_reg_478, bx_V3_phi_reg_532, icmp_ln322_reg_1557_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln322_reg_1557_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_bx_V3_rewind_phi_fu_482_p6 <= bx_V3_phi_reg_532;
        else 
            ap_phi_mux_bx_V3_rewind_phi_fu_482_p6 <= bx_V3_rewind_reg_478;
        end if; 
    end process;


    ap_phi_mux_cStubCounter_0_i2_phi_fu_454_p6_assign_proc : process(cStubCounter_0_i2_reg_450, cStubCounter_reg_1552, icmp_ln322_reg_1557, ap_condition_311)
    begin
        if ((ap_const_boolean_1 = ap_condition_311)) then
            if ((icmp_ln322_reg_1557 = ap_const_lv1_1)) then 
                ap_phi_mux_cStubCounter_0_i2_phi_fu_454_p6 <= ap_const_lv7_0;
            elsif ((icmp_ln322_reg_1557 = ap_const_lv1_0)) then 
                ap_phi_mux_cStubCounter_0_i2_phi_fu_454_p6 <= cStubCounter_reg_1552;
            else 
                ap_phi_mux_cStubCounter_0_i2_phi_fu_454_p6 <= cStubCounter_0_i2_reg_450;
            end if;
        else 
            ap_phi_mux_cStubCounter_0_i2_phi_fu_454_p6 <= cStubCounter_0_i2_reg_450;
        end if; 
    end process;


    ap_phi_mux_do_init_phi_fu_438_p6_assign_proc : process(do_init_reg_434, icmp_ln322_reg_1557, ap_condition_311)
    begin
        if ((ap_const_boolean_1 = ap_condition_311)) then
            if ((icmp_ln322_reg_1557 = ap_const_lv1_1)) then 
                ap_phi_mux_do_init_phi_fu_438_p6 <= ap_const_lv1_1;
            elsif ((icmp_ln322_reg_1557 = ap_const_lv1_0)) then 
                ap_phi_mux_do_init_phi_fu_438_p6 <= ap_const_lv1_0;
            else 
                ap_phi_mux_do_init_phi_fu_438_p6 <= do_init_reg_434;
            end if;
        else 
            ap_phi_mux_do_init_phi_fu_438_p6 <= do_init_reg_434;
        end if; 
    end process;


    ap_phi_mux_hEntries_V_phi_fu_587_p8_assign_proc : process(hEntries_V1_reg_569, icmp_ln879_reg_1561_pp0_iter3_reg, trunc_ln647_reg_1565_pp0_iter3_reg, ap_phi_reg_pp0_iter4_hEntries_V_reg_583, tmp_14_fu_1483_p3, hNStubs_0_V_fu_1491_p2)
    begin
        if (((tmp_14_fu_1483_p3 = ap_const_lv1_1) and (trunc_ln647_reg_1565_pp0_iter3_reg = ap_const_lv1_1) and (icmp_ln879_reg_1561_pp0_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_hEntries_V_phi_fu_587_p8 <= hNStubs_0_V_fu_1491_p2;
        elsif (((icmp_ln879_reg_1561_pp0_iter3_reg = ap_const_lv1_1) or ((trunc_ln647_reg_1565_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln879_reg_1561_pp0_iter3_reg = ap_const_lv1_0)) or ((trunc_ln647_reg_1565_pp0_iter3_reg = ap_const_lv1_1) and (tmp_14_fu_1483_p3 = ap_const_lv1_0) and (icmp_ln879_reg_1561_pp0_iter3_reg = ap_const_lv1_0)))) then 
            ap_phi_mux_hEntries_V_phi_fu_587_p8 <= hEntries_V1_reg_569;
        else 
            ap_phi_mux_hEntries_V_phi_fu_587_p8 <= ap_phi_reg_pp0_iter4_hEntries_V_reg_583;
        end if; 
    end process;


    ap_phi_mux_hLinkWord_V4_phi_phi_fu_549_p4_assign_proc : process(do_init_reg_434, ap_phi_mux_hLinkWord_V4_rewind_phi_fu_496_p6, ap_phi_reg_pp0_iter1_hLinkWord_V4_phi_reg_545)
    begin
        if ((do_init_reg_434 = ap_const_lv1_0)) then 
            ap_phi_mux_hLinkWord_V4_phi_phi_fu_549_p4 <= ap_phi_mux_hLinkWord_V4_rewind_phi_fu_496_p6;
        else 
            ap_phi_mux_hLinkWord_V4_phi_phi_fu_549_p4 <= ap_phi_reg_pp0_iter1_hLinkWord_V4_phi_reg_545;
        end if; 
    end process;


    ap_phi_mux_hLinkWord_V4_rewind_phi_fu_496_p6_assign_proc : process(ap_block_pp0_stage0, hLinkWord_V4_rewind_reg_492, hLinkWord_V4_phi_reg_545, icmp_ln322_reg_1557_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln322_reg_1557_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_hLinkWord_V4_rewind_phi_fu_496_p6 <= hLinkWord_V4_phi_reg_545;
        else 
            ap_phi_mux_hLinkWord_V4_rewind_phi_fu_496_p6 <= hLinkWord_V4_rewind_reg_492;
        end if; 
    end process;


    ap_phi_mux_hPhBnWord_V5_rewind_phi_fu_510_p6_assign_proc : process(ap_block_pp0_stage0, hPhBnWord_V5_rewind_reg_506, hPhBnWord_V5_phi_reg_557, icmp_ln322_reg_1557_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln322_reg_1557_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_hPhBnWord_V5_rewind_phi_fu_510_p6 <= hPhBnWord_V5_phi_reg_557;
        else 
            ap_phi_mux_hPhBnWord_V5_rewind_phi_fu_510_p6 <= hPhBnWord_V5_rewind_reg_506;
        end if; 
    end process;


    ap_phi_mux_p_rewind_phi_fu_468_p6_assign_proc : process(ap_block_pp0_stage0, p_rewind_reg_464, p_phi_reg_520, icmp_ln322_reg_1557_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln322_reg_1557_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_rewind_phi_fu_468_p6 <= p_phi_reg_520;
        else 
            ap_phi_mux_p_rewind_phi_fu_468_p6 <= p_rewind_reg_464;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_bx_V3_phi_reg_532 <= "XXX";
    ap_phi_reg_pp0_iter0_hLinkWord_V4_phi_reg_545 <= "XXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_hPhBnWord_V5_phi_reg_557 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_phi_reg_520 <= "X";
    ap_phi_reg_pp0_iter4_hEntries_V_reg_583 <= "XXXXXXX";

    ap_ready_assign_proc : process(ap_start, icmp_ln322_fu_615_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln322_fu_615_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to3)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to3 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    bx_o_V <= bx_o_V_1_data_reg;

    bx_o_V_1_ack_in_assign_proc : process(bx_o_V_1_vld_reg)
    begin
        if (((bx_o_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (bx_o_V_1_vld_reg = ap_const_logic_1)))) then 
            bx_o_V_1_ack_in <= ap_const_logic_1;
        else 
            bx_o_V_1_ack_in <= ap_const_logic_0;
        end if; 
    end process;


    bx_o_V_1_vld_in_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln322_reg_1557_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln322_reg_1557_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            bx_o_V_1_vld_in <= ap_const_logic_1;
        else 
            bx_o_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    bx_o_V_ap_vld <= bx_o_V_1_vld_reg;
    cBn_l_index_1_fu_1175_p3 <= 
        select_ln176_5_fu_1159_p3 when (or_ln141_3_fu_943_p2(0) = '1') else 
        select_ln176_6_fu_1167_p3;
    cBn_l_index_fu_1043_p3 <= 
        zext_ln176_fu_1031_p1 when (or_ln141_3_fu_943_p2(0) = '1') else 
        select_ln176_2_fu_1035_p3;
    cIndxThisBn_1_fu_1451_p3 <= 
        trunc_ln647_1_fu_1443_p1 when (p_phi_reg_520_pp0_iter2_reg(0) = '1') else 
        trunc_ln647_2_fu_1447_p1;
    cIndxThisBn_2_fu_1459_p3 <= 
        cIndxThisBn_1_fu_1451_p3 when (tmp_2_fu_1195_p3(0) = '1') else 
        cIndxThisBn_fu_1229_p1;
    cIndxThisBn_fu_1229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_fu_1221_p3),32));
    cStubCounter_fu_609_p2 <= std_logic_vector(unsigned(ap_phi_mux_cStubCounter_0_i2_phi_fu_454_p6) + unsigned(ap_const_lv7_1));
    corrval_12_fu_957_p3 <= 
        select_ln141_3_fu_935_p3 when (or_ln141_3_fu_943_p2(0) = '1') else 
        select_ln141_4_fu_949_p3;
    corrval_13_fu_1095_p3 <= 
        select_ln141_9_fu_1079_p3 when (or_ln141_3_fu_943_p2(0) = '1') else 
        select_ln141_10_fu_1087_p3;
    hBend_V_1_fu_788_p4 <= hStub_V_reg_1537(5 downto 3);
    hBend_V_fu_756_p4 <= hStub_V_reg_1537(6 downto 3);

    hInputStubs_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, hInputStubs_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            hInputStubs_V_blk_n <= hInputStubs_V_empty_n;
        else 
            hInputStubs_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    hInputStubs_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            hInputStubs_V_read <= ap_const_logic_1;
        else 
            hInputStubs_V_read <= ap_const_logic_0;
        end if; 
    end process;

    hNStubs_0_V_fu_1491_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(hEntries_V1_reg_569));
    hOutputStubs_0_dataarray_data_V_address0 <= zext_ln321_fu_1510_p1(8 - 1 downto 0);

    hOutputStubs_0_dataarray_data_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            hOutputStubs_0_dataarray_data_V_ce0 <= ap_const_logic_1;
        else 
            hOutputStubs_0_dataarray_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hOutputStubs_0_dataarray_data_V_d0 <= hAStub_data_V_reg_1681;

    hOutputStubs_0_dataarray_data_V_we0_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, icmp_ln879_reg_1561_pp0_iter3_reg, trunc_ln647_reg_1565_pp0_iter3_reg, tmp_14_fu_1483_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_14_fu_1483_p3 = ap_const_lv1_1) and (trunc_ln647_reg_1565_pp0_iter3_reg = ap_const_lv1_1) and (icmp_ln879_reg_1561_pp0_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            hOutputStubs_0_dataarray_data_V_we0 <= ap_const_logic_1;
        else 
            hOutputStubs_0_dataarray_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    hPhi_V_1_fu_834_p4 <= hStub_V_reg_1537_pp0_iter1_reg(19 downto 6);
    hPhi_V_fu_825_p4 <= hStub_V_reg_1537_pp0_iter1_reg(23 downto 7);
    icmp_ln141_1_fu_864_p2 <= "1" when (p_Result_s_reg_1579 = ap_const_lv20_5) else "0";
    icmp_ln141_2_fu_869_p2 <= "1" when (p_Result_s_reg_1579 = ap_const_lv20_4) else "0";
    icmp_ln141_3_fu_874_p2 <= "1" when (p_Result_s_reg_1579 = ap_const_lv20_3) else "0";
    icmp_ln141_4_fu_879_p2 <= "1" when (p_Result_s_reg_1579 = ap_const_lv20_2) else "0";
    icmp_ln141_5_fu_884_p2 <= "1" when (p_Result_s_reg_1579 = ap_const_lv20_1) else "0";
    icmp_ln141_fu_859_p2 <= "1" when (p_Result_s_reg_1579 = ap_const_lv20_6) else "0";
    icmp_ln322_fu_615_p2 <= "1" when (ap_phi_mux_cStubCounter_0_i2_phi_fu_454_p6 = ap_const_lv7_6B) else "0";
    icmp_ln681_1_fu_1243_p2 <= "1" when (unsigned(cBn_l_index_reg_1659) > unsigned(ap_const_lv5_10)) else "0";
    icmp_ln681_2_fu_1351_p2 <= "1" when (unsigned(cBn_l_index_1_reg_1675) > unsigned(ap_const_lv4_D)) else "0";
    icmp_ln681_fu_658_p2 <= "1" when (unsigned(Lo_1_fu_652_p2) > unsigned(Hi_1_fu_646_p2)) else "0";
    icmp_ln879_fu_621_p2 <= "1" when (hStub_V_reg_1537 = ap_const_lv39_0) else "0";
    icmp_ln891_fu_1335_p2 <= "0" when (tmp_12_reg_1670 = ap_const_lv2_0) else "1";
    kPhiCorrtable_L1_address0 <= zext_ln544_fu_805_p1(6 - 1 downto 0);
    kPhiCorrtable_L1_address1 <= zext_ln544_1_fu_815_p1(6 - 1 downto 0);

    kPhiCorrtable_L1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kPhiCorrtable_L1_ce0 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kPhiCorrtable_L1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kPhiCorrtable_L1_ce1 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    kPhiCorrtable_L2_address0 <= zext_ln544_fu_805_p1(6 - 1 downto 0);
    kPhiCorrtable_L2_address1 <= zext_ln544_1_fu_815_p1(6 - 1 downto 0);

    kPhiCorrtable_L2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kPhiCorrtable_L2_ce0 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kPhiCorrtable_L2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kPhiCorrtable_L2_ce1 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    kPhiCorrtable_L3_address0 <= zext_ln544_fu_805_p1(6 - 1 downto 0);
    kPhiCorrtable_L3_address1 <= zext_ln544_1_fu_815_p1(6 - 1 downto 0);

    kPhiCorrtable_L3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kPhiCorrtable_L3_ce0 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kPhiCorrtable_L3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kPhiCorrtable_L3_ce1 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    kPhiCorrtable_L4_address0 <= zext_ln544_fu_805_p1(7 - 1 downto 0);
    kPhiCorrtable_L4_address1 <= zext_ln544_1_fu_815_p1(7 - 1 downto 0);

    kPhiCorrtable_L4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kPhiCorrtable_L4_ce0 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kPhiCorrtable_L4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kPhiCorrtable_L4_ce1 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L4_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    kPhiCorrtable_L5_address0 <= zext_ln544_fu_805_p1(7 - 1 downto 0);
    kPhiCorrtable_L5_address1 <= zext_ln544_1_fu_815_p1(7 - 1 downto 0);

    kPhiCorrtable_L5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kPhiCorrtable_L5_ce0 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kPhiCorrtable_L5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kPhiCorrtable_L5_ce1 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    kPhiCorrtable_L6_address0 <= zext_ln544_fu_805_p1(7 - 1 downto 0);
    kPhiCorrtable_L6_address1 <= zext_ln544_1_fu_815_p1(7 - 1 downto 0);

    kPhiCorrtable_L6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kPhiCorrtable_L6_ce0 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kPhiCorrtable_L6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            kPhiCorrtable_L6_ce1 <= ap_const_logic_1;
        else 
            kPhiCorrtable_L6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln681_1_fu_744_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv20_FFFFF),to_integer(unsigned('0' & zext_ln681_3_fu_734_p1(20-1 downto 0)))));
    lshr_ln681_2_fu_1317_p2 <= std_logic_vector(shift_right(unsigned(select_ln681_4_fu_1287_p3),to_integer(unsigned('0' & zext_ln681_5_fu_1309_p1(31-1 downto 0)))));
    lshr_ln681_3_fu_1323_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv33_1FFFFFFFF),to_integer(unsigned('0' & zext_ln681_6_fu_1313_p1(31-1 downto 0)))));
    lshr_ln681_4_fu_1425_p2 <= std_logic_vector(shift_right(unsigned(select_ln681_7_fu_1395_p3),to_integer(unsigned('0' & zext_ln681_8_fu_1417_p1(31-1 downto 0)))));
    lshr_ln681_5_fu_1431_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv33_1FFFFFFFF),to_integer(unsigned('0' & zext_ln681_9_fu_1421_p1(31-1 downto 0)))));
    lshr_ln681_fu_738_p2 <= std_logic_vector(shift_right(unsigned(select_ln681_1_fu_708_p3),to_integer(unsigned('0' & zext_ln681_2_fu_730_p1(20-1 downto 0)))));
    or_ln141_1_fu_915_p2 <= (icmp_ln141_3_fu_874_p2 or icmp_ln141_2_fu_869_p2);
    or_ln141_2_fu_929_p2 <= (icmp_ln141_fu_859_p2 or icmp_ln141_1_fu_864_p2);
    or_ln141_3_fu_943_p2 <= (or_ln141_fu_901_p2 or or_ln141_1_fu_915_p2);
    or_ln141_fu_901_p2 <= (icmp_ln141_5_fu_884_p2 or icmp_ln141_4_fu_879_p2);
    p_Result_1_fu_1329_p2 <= (lshr_ln681_3_fu_1323_p2 and lshr_ln681_2_fu_1317_p2);
    p_Result_2_fu_1437_p2 <= (lshr_ln681_5_fu_1431_p2 and lshr_ln681_4_fu_1425_p2);
    p_Result_4_fu_1203_p4 <= hStub_V_reg_1537_pp0_iter2_reg(24 downto 23);
    p_Result_5_fu_1212_p4 <= hStub_V_reg_1537_pp0_iter2_reg(19 downto 18);
    p_Result_s_fu_750_p2 <= (lshr_ln681_fu_738_p2 and lshr_ln681_1_fu_744_p2);
    p_Val2_5_fu_1233_p3 <= 
        ap_const_lv17_1FFFF when (tmp_9_reg_1654(0) = '1') else 
        trunc_ln171_reg_1649;
    p_Val2_6_fu_1340_p3 <= 
        ap_const_lv14_3FFF when (icmp_ln891_fu_1335_p2(0) = '1') else 
        trunc_ln171_1_reg_1665;
    rbin_V_fu_774_p2 <= (trunc_ln1_fu_765_p4 xor ap_const_lv3_4);
    ret_V_1_fu_1111_p2 <= std_logic_vector(unsigned(zext_ln215_1_fu_1103_p1) - unsigned(sext_ln215_1_fu_1107_p1));
    ret_V_fu_973_p2 <= std_logic_vector(unsigned(zext_ln215_fu_965_p1) - unsigned(sext_ln215_fu_969_p1));
    select_ln141_10_fu_1087_p3 <= 
        select_ln141_8_fu_1071_p3 when (or_ln141_2_fu_929_p2(0) = '1') else 
        ap_const_lv16_0;
    select_ln141_1_fu_907_p3 <= 
        sext_ln152_fu_847_p1 when (icmp_ln141_3_fu_874_p2(0) = '1') else 
        kPhiCorrtable_L4_q0;
    select_ln141_2_fu_921_p3 <= 
        kPhiCorrtable_L5_q0 when (icmp_ln141_1_fu_864_p2(0) = '1') else 
        kPhiCorrtable_L6_q0;
    select_ln141_3_fu_935_p3 <= 
        sext_ln141_fu_897_p1 when (or_ln141_fu_901_p2(0) = '1') else 
        select_ln141_1_fu_907_p3;
    select_ln141_4_fu_949_p3 <= 
        select_ln141_2_fu_921_p3 when (or_ln141_2_fu_929_p2(0) = '1') else 
        ap_const_lv16_0;
    select_ln141_6_fu_1051_p3 <= 
        kPhiCorrtable_L1_q1 when (icmp_ln141_5_fu_884_p2(0) = '1') else 
        sext_ln148_1_fu_851_p1;
    select_ln141_7_fu_1063_p3 <= 
        sext_ln152_1_fu_855_p1 when (icmp_ln141_3_fu_874_p2(0) = '1') else 
        kPhiCorrtable_L4_q1;
    select_ln141_8_fu_1071_p3 <= 
        kPhiCorrtable_L5_q1 when (icmp_ln141_1_fu_864_p2(0) = '1') else 
        kPhiCorrtable_L6_q1;
    select_ln141_9_fu_1079_p3 <= 
        sext_ln141_1_fu_1059_p1 when (or_ln141_fu_901_p2(0) = '1') else 
        select_ln141_7_fu_1063_p3;
    select_ln141_fu_889_p3 <= 
        kPhiCorrtable_L1_q0 when (icmp_ln141_5_fu_884_p2(0) = '1') else 
        sext_ln148_fu_843_p1;
    select_ln171_1_fu_1129_p3 <= 
        ap_const_lv16_0 when (tmp_11_fu_1121_p3(0) = '1') else 
        trunc_ln1354_1_fu_1117_p1;
    select_ln171_fu_991_p3 <= 
        ap_const_lv18_0 when (tmp_7_fu_983_p3(0) = '1') else 
        trunc_ln1354_fu_979_p1;
    select_ln176_1_fu_1019_p3 <= 
        select_ln176_fu_1011_p3 when (or_ln141_fu_901_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln176_2_fu_1035_p3 <= 
        ap_const_lv5_F when (or_ln141_2_fu_929_p2(0) = '1') else 
        ap_const_lv5_11;
    select_ln176_4_fu_1151_p3 <= 
        ap_const_lv4_B when (icmp_ln141_5_fu_884_p2(0) = '1') else 
        ap_const_lv4_C;
    select_ln176_5_fu_1159_p3 <= 
        select_ln176_4_fu_1151_p3 when (or_ln141_fu_901_p2(0) = '1') else 
        ap_const_lv4_C;
    select_ln176_6_fu_1167_p3 <= 
        ap_const_lv4_C when (or_ln141_2_fu_929_p2(0) = '1') else 
        ap_const_lv4_E;
    select_ln176_fu_1011_p3 <= 
        ap_const_lv2_2 when (icmp_ln141_5_fu_884_p2(0) = '1') else 
        ap_const_lv2_3;
    select_ln647_fu_1221_p3 <= 
        p_Result_4_fu_1203_p4 when (p_phi_reg_520_pp0_iter2_reg(0) = '1') else 
        p_Result_5_fu_1212_p4;
    select_ln681_1_fu_708_p3 <= 
        tmp_3_fu_672_p4 when (icmp_ln681_fu_658_p2(0) = '1') else 
        ap_phi_mux_hLinkWord_V4_phi_phi_fu_549_p4;
    select_ln681_2_fu_716_p3 <= 
        sub_ln681_1_fu_688_p2 when (icmp_ln681_fu_658_p2(0) = '1') else 
        zext_ln681_fu_664_p1;
    select_ln681_3_fu_1279_p3 <= 
        add_ln681_fu_1261_p2 when (icmp_ln681_1_fu_1243_p2(0) = '1') else 
        sub_ln681_5_fu_1273_p2;
    select_ln681_4_fu_1287_p3 <= 
        tmp_10_fu_1251_p4 when (icmp_ln681_1_fu_1243_p2(0) = '1') else 
        zext_ln173_fu_1239_p1;
    select_ln681_5_fu_1295_p3 <= 
        sub_ln681_4_fu_1267_p2 when (icmp_ln681_1_fu_1243_p2(0) = '1') else 
        zext_ln681_4_fu_1248_p1;
    select_ln681_6_fu_1387_p3 <= 
        add_ln681_1_fu_1369_p2 when (icmp_ln681_2_fu_1351_p2(0) = '1') else 
        sub_ln681_8_fu_1381_p2;
    select_ln681_7_fu_1395_p3 <= 
        tmp_13_fu_1359_p4 when (icmp_ln681_2_fu_1351_p2(0) = '1') else 
        zext_ln173_1_fu_1347_p1;
    select_ln681_8_fu_1403_p3 <= 
        sub_ln681_7_fu_1375_p2 when (icmp_ln681_2_fu_1351_p2(0) = '1') else 
        zext_ln681_7_fu_1356_p1;
    select_ln681_fu_700_p3 <= 
        sub_ln681_fu_682_p2 when (icmp_ln681_fu_658_p2(0) = '1') else 
        sub_ln681_2_fu_694_p2;
        sext_ln141_1_fu_1059_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln141_6_fu_1051_p3),16));

        sext_ln141_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln141_fu_889_p3),16));

        sext_ln148_1_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kPhiCorrtable_L2_q1),15));

        sext_ln148_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kPhiCorrtable_L2_q0),15));

        sext_ln152_1_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kPhiCorrtable_L3_q1),16));

        sext_ln152_fu_847_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kPhiCorrtable_L3_q0),16));

        sext_ln176_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln176_1_fu_1019_p3),4));

        sext_ln215_1_fu_1107_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(corrval_13_fu_1095_p3),17));

        sext_ln215_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(corrval_12_fu_957_p3),19));

    shl_ln_fu_1467_p3 <= (tmp_reg_1569_pp0_iter3_reg & ap_const_lv3_0);
    sub_ln681_1_fu_688_p2 <= std_logic_vector(signed(ap_const_lv5_13) - signed(zext_ln681_fu_664_p1));
    sub_ln681_2_fu_694_p2 <= std_logic_vector(unsigned(zext_ln681_1_fu_668_p1) - unsigned(zext_ln681_fu_664_p1));
    sub_ln681_3_fu_724_p2 <= std_logic_vector(signed(ap_const_lv5_13) - signed(select_ln681_fu_700_p3));
    sub_ln681_4_fu_1267_p2 <= std_logic_vector(signed(ap_const_lv6_20) - signed(zext_ln681_4_fu_1248_p1));
    sub_ln681_5_fu_1273_p2 <= std_logic_vector(unsigned(ap_const_lv6_10) - unsigned(zext_ln681_4_fu_1248_p1));
    sub_ln681_6_fu_1303_p2 <= std_logic_vector(signed(ap_const_lv6_20) - signed(select_ln681_3_fu_1279_p3));
    sub_ln681_7_fu_1375_p2 <= std_logic_vector(signed(ap_const_lv6_20) - signed(zext_ln681_7_fu_1356_p1));
    sub_ln681_8_fu_1381_p2 <= std_logic_vector(unsigned(ap_const_lv6_D) - unsigned(zext_ln681_7_fu_1356_p1));
    sub_ln681_9_fu_1411_p2 <= std_logic_vector(signed(ap_const_lv6_20) - signed(select_ln681_6_fu_1387_p3));
    sub_ln681_fu_682_p2 <= std_logic_vector(unsigned(zext_ln681_fu_664_p1) - unsigned(zext_ln681_1_fu_668_p1));
    
    tmp_10_fu_1251_p4_proc : process(zext_ln173_fu_1239_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(33+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(33+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable tmp_10_fu_1251_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(33 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_20(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := zext_ln173_fu_1239_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(33-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(33-1-unsigned(ap_const_lv32_20(6-1 downto 0)));
            for tmp_10_fu_1251_p4_i in 0 to 33-1 loop
                v0_cpy(tmp_10_fu_1251_p4_i) := zext_ln173_fu_1239_p1(33-1-tmp_10_fu_1251_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(33-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_10_fu_1251_p4 <= resvalue(33-1 downto 0);
    end process;

    tmp_11_fu_1121_p3 <= ret_V_1_fu_1111_p2(16 downto 16);
    
    tmp_13_fu_1359_p4_proc : process(zext_ln173_1_fu_1347_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(33+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(33+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable tmp_13_fu_1359_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(33 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_20(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := zext_ln173_1_fu_1347_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(33-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(33-1-unsigned(ap_const_lv32_20(6-1 downto 0)));
            for tmp_13_fu_1359_p4_i in 0 to 33-1 loop
                v0_cpy(tmp_13_fu_1359_p4_i) := zext_ln173_1_fu_1347_p1(33-1-tmp_13_fu_1359_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(33-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_13_fu_1359_p4 <= resvalue(33-1 downto 0);
    end process;

    tmp_14_fu_1483_p3 <= hPhBnWord_V5_phi_reg_557_pp0_iter3_reg(to_integer(unsigned(Hi_2_fu_1478_p2)) downto to_integer(unsigned(Hi_2_fu_1478_p2))) when (to_integer(unsigned(Hi_2_fu_1478_p2))>= 0 and to_integer(unsigned(Hi_2_fu_1478_p2))<=31) else "-";
    tmp_2_fu_1195_p3 <= hLinkWord_V4_phi_reg_545_pp0_iter2_reg(to_integer(unsigned(zext_ln555_fu_1192_p1)) downto to_integer(unsigned(zext_ln555_fu_1192_p1))) when (to_integer(unsigned(zext_ln555_fu_1192_p1))>= 0 and to_integer(unsigned(zext_ln555_fu_1192_p1))<=19) else "-";
    
    tmp_3_fu_672_p4_proc : process(ap_phi_mux_hLinkWord_V4_phi_phi_fu_549_p4)
    variable vlo_cpy : STD_LOGIC_VECTOR(20+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(20+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(20 - 1 downto 0);
    variable tmp_3_fu_672_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(20 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(20 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(20 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_13(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := ap_phi_mux_hLinkWord_V4_phi_phi_fu_549_p4;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(20-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(20-1-unsigned(ap_const_lv32_13(5-1 downto 0)));
            for tmp_3_fu_672_p4_i in 0 to 20-1 loop
                v0_cpy(tmp_3_fu_672_p4_i) := ap_phi_mux_hLinkWord_V4_phi_phi_fu_549_p4(20-1-tmp_3_fu_672_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(20-1 downto 0)))));
        res_mask := res_mask(20-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_3_fu_672_p4 <= resvalue(20-1 downto 0);
    end process;

    tmp_5_fu_780_p3 <= (hBend_V_fu_756_p4 & rbin_V_fu_774_p2);
    tmp_6_fu_797_p3 <= (hBend_V_1_fu_788_p4 & rbin_V_fu_774_p2);
    tmp_7_fu_983_p3 <= ret_V_fu_973_p2(18 downto 18);
    tmp_8_fu_1502_p3 <= (trunc_ln321_fu_1498_p1 & hEntries_V1_reg_569);
    tmp_fu_629_p4 <= hStub_V_reg_1537(2 downto 1);
    trunc_ln1354_1_fu_1117_p1 <= ret_V_1_fu_1111_p2(16 - 1 downto 0);
    trunc_ln1354_fu_979_p1 <= ret_V_fu_973_p2(18 - 1 downto 0);
    trunc_ln171_1_fu_1137_p1 <= select_ln171_1_fu_1129_p3(14 - 1 downto 0);
    trunc_ln171_fu_999_p1 <= select_ln171_fu_991_p3(17 - 1 downto 0);
    trunc_ln1_fu_765_p4 <= hStub_V_reg_1537(38 downto 36);
    trunc_ln321_fu_1498_p1 <= bx_V3_phi_reg_532_pp0_iter3_reg(1 - 1 downto 0);
    trunc_ln647_1_fu_1443_p1 <= p_Result_1_fu_1329_p2(32 - 1 downto 0);
    trunc_ln647_2_fu_1447_p1 <= p_Result_2_fu_1437_p2(32 - 1 downto 0);
    trunc_ln647_fu_626_p1 <= hStub_V_reg_1537(1 - 1 downto 0);
    zext_ln173_1_fu_1347_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_6_fu_1340_p3),33));
    zext_ln173_fu_1239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_5_fu_1233_p3),33));
    zext_ln176_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln176_fu_1027_p1),5));
    zext_ln215_1_fu_1103_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hPhi_V_1_fu_834_p4),17));
    zext_ln215_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hPhi_V_fu_825_p4),19));
    zext_ln321_fu_1510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1502_p3),64));
    zext_ln544_1_fu_815_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_797_p3),64));
    zext_ln544_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_780_p3),64));
    zext_ln555_1_fu_1474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1467_p3),32));
    zext_ln555_fu_1192_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Hi_reg_1574_pp0_iter2_reg),32));
    zext_ln681_1_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Hi_1_fu_646_p2),5));
    zext_ln681_2_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln681_2_fu_716_p3),20));
    zext_ln681_3_fu_734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln681_3_fu_724_p2),20));
    zext_ln681_4_fu_1248_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cBn_l_index_reg_1659),6));
    zext_ln681_5_fu_1309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln681_5_fu_1295_p3),33));
    zext_ln681_6_fu_1313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln681_6_fu_1303_p2),33));
    zext_ln681_7_fu_1356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cBn_l_index_1_reg_1675),6));
    zext_ln681_8_fu_1417_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln681_8_fu_1403_p3),33));
    zext_ln681_9_fu_1421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln681_9_fu_1411_p2),33));
    zext_ln681_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_1_fu_652_p2),5));
end behav;
